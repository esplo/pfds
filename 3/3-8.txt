サイズnの赤黒木の最大深さが2 * floor(log(n+1))だと仮定。
f(n) = 2 * floor(log(n+1)) と表す。

サイズn+1の赤黒木の最大深さは、log(n+2)の値により以下の2パターンに分類される。
1. 2 * floor(log(n+2)) = 2 * floor(log(n+1)) = f(n)
2. 2 * log(n+2) = 2 * (1 + floor(log(n+1))) = 2 + f(n)

2はn+2 = 2^m、1はそれ以外の場合。

f(n) <= f(n+1)より、1は明らかに高々2*floor(log(n+2))である。
また、




-----

最短経路 * 2 >= 最長経路
なので、この問題は以下に言い換えられる。
- サイズnの赤黒木におけるノードの最短経路が高々floor(log(n+1))であることを証明せよ

# ありうる最短経路は黒いノードのみからなるため、不変条件2より、空ノードの数だけ最短経路分のノードが存在する。
# ここで、ノード数がnの時、空ノードはn+1個存在する。

log(n+1) <= 深さ <= 2*floor(log(n+1))
