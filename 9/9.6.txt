この処理で最も時間の掛かる表現はOneが連続する場合なので、このケースのみ考える。

j番目のOneにあるTreeは、2^j個の要素を持つ (j > 0)。
各Treeは、j回の探索で任意の要素を発見できる。
探したいi番目の要素は、floor( log(i+1) ) + 1 番目のOneに含まれる。

上記より、i番目の要素を発見するコストは下記に表される。
cost
<= 2 * floor( log(i+1) + 1)
<= 2 * log(i+1) + 2

よって、O(logi)時間で動く。
